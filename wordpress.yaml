---
- name: Deploy Wordpress
  hosts: all
  become: yes
  vars_files:
    - /vagrant/variables.yaml
    
  tasks:
    #Can't make sudo ber user, to be able to execute commands like apt-get update without entering the user pw
    #- name: New group
    #  become: yes
    #  group:
    #   name: sudousers
    #   state: present
       
    #- name: sudo without password for sudousers group
    #  become: yes
    #  copy:
    #    content: '%sudousers ALL=(ALL:ALL) NOPASSWD:ALL'
    #    dest: /etc/sudoers.d/sudousers_nopasswd
    #    mode: 0440
        
    - name: Create a login user
      become: yes
      user:
       name: "{{ user_name }}" 
       password: "{{ user_pwd | password_hash('sha512') }}"
       groups: 
        - sudo
       append: yes
       state: present
       shell: "{{ user_shell }}"        
       system: yes             
       createhome: yes        
       home: "{{ user_home }}" 
      
    - name: Update the System
      apt:
        update_cache: yes
    
    - name: Install LEMP Packages
      apt:
        name:
            - nginx
            - mysql-server
            - python3-mysqldb
            - php7.4-cli
            - php7.4-fpm
            - php7.4-mysql
            - php7.4-json
            - php7.4-opcache
            - php7.4-mbstring
            - php7.4-xml
            - php7.4-gd
            - php7.4-curl
            
    - name: Allow NGINX on Firewall 
      ufw:
        rule: allow
        name: "Nginx Full"
    
    - name: Check if SSL-Certificate exists
      stat: path="/etc/ssl/certs/nginx-selfsigned.crt"
      register: sslcrt_exists
     
    - name: Create SSL-Certificate
      shell: |
                openssl req -x509 -newkey rsa:2048 -days 365 -nodes \
                -subj "/C=AR/ST=BSAS/L=BSAS/O=WordPress/OU=WP/CN={{ wp_iphost }}" \
                -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
                openssl dhparam -out /etc/nginx/dhparam.pem 2048
      when: sslcrt_exists.stat.exists == false
      
    - name: Copy Conf. Snippets pointing SSL key and certificate
      copy:
        src: "/vagrant/self-signed.conf"
        dest: "/etc/nginx/snippets/"
        remote_src: yes
        
    - name: Copy ssl-params
      copy:
        src: "/vagrant/ssl-params.conf"
        dest: "/etc/nginx/snippets/"
        remote_src: yes
        
    - name: Copy Nginx config       
      template:
        src: "/vagrant/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ wp_root_dir }}"
        
    - name: Symbolic link on Wordpress nginx configuration file      
      file:
        src: "/etc/nginx/sites-available/{{ wp_root_dir }}"
        dest: "/etc/nginx/sites-enabled/{{ wp_root_dir }}"
        state: link
        
    - name: Unlink Default nginx config      
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
        
    - name: Create WP Database
      mysql_db:
        name: "{{ db_name }}"
        state: present
        login_user: root
        login_password: "{{ mysql_password }}"
    
    - name: Create WordPress Database user
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL,GRANT"
        state: present
        login_user: root
        login_password: "{{ mysql_password }}"
    
    - name: Check if WP dir exists
      stat: path="/var/www/{{ wp_root_dir }}"
      register: wp_dir_exists
      
    - name: Extract Wordpress file        
      unarchive:
        src: "{{ url_wordpress }}"
        dest: "/var/www/"
        remote_src: yes
      when: not wp_dir_exists.stat.exists
        
    - name: Copy wordpress config php file (wp database connection)        
      template:
        src: "/vagrant/wp-config.php.j2"
        dest: "/var/www/{{ wp_root_dir }}/wp-config.php"
        force: yes
    
    - name: Setup owner and group privileges to www-data and 755 permissions.       
      file:
        path: "/var/www/{{ wp_root_dir }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: 0755
    
    - name: Setup rw- permissions to wp-content, so upload works
      file:
        path: "/var/www/{{ wp_root_dir }}/wp-content"
        state: directory
        recurse: yes
        mode: 0766
    
    - name: Check if WP-CLI dir exists
      stat: path="/usr/local/bin/wp"
      register: wp_cli_exists
      
    - name: Download WP-Cli file      
      get_url:
        url: "{{ url_wpcli }}"
        dest: /usr/local/bin/wp
        mode: 0755
      when: not wp_cli_exists.stat.exists
    
    - name: Install WP-CLI 
      #become_user: ber
      shell: 'sudo -u ber -i -- wp core install --url="{{ wp_iphost }}" --title="{{ title }}" --admin_user="{{ wp_admin_user }}" --admin_email="{{ wp_admin_mail }}" --admin_password="{{ wp_admin_password }}" --path="/var/www/{{ wp_root_dir }}"'
      
    - name: Install Theme
      #become_user: ber
      shell: 'sudo -u ber -i -- wp theme install twentynineteen --activate --path="/var/www/{{ wp_root_dir }}"'
    
    - name: Restart MySQL  
      service:
        name: mysql
        state: restarted
    
    - name: Restart Nginx  
      service:
        name: nginx
        state: restarted